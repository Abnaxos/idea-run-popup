import java.time.LocalDateTime

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.4.16'
        classpath 'org.ajoberstar:grgit:1.7.2'
    }
}

buildDir = 'target'
apply plugin:'java'
apply plugin:'idea'
apply plugin:'org.jetbrains.intellij'

ext.git = local.GitInfo.load(project)
version = git.version

intellij {
    version = '193.6015.39' // 2019.3.2
    updateSinceUntilBuild = false
    sandboxDirectory = 'idea-sandbox'
}

//noinspection GroovyAssignabilityCheck
task updateLicense() {

    ext.copyrightProfile = file(file('.idea/copyright/MIT.xml'))
    ext.licenseFile = file('LICENSE')

    inputs.file copyrightProfile
    outputs.file licenseFile

    doFirst {
        String lic = new XmlSlurper().parse(copyrightProfile as File).copyright.option.find({it.@name=='notice'}).@value as String
        lic = lic.replaceAll('(\\\$|&#36;)today.year(\\b)', "${LocalDateTime.now().year}\$2")
        licenseFile.text = lic
    }

}

buildPlugin {
    dependsOn updateLicense
    from updateLicense.licenseFile
}

patchPluginXml {
    String repoContentRootUrl = 'https://raw.githubusercontent.com/Abnaxos/idea-run-popup/'
    if (version.contains('SNAPSHOT')) {
        repoContentRootUrl += 'develop'
    } else {
        repoContentRootUrl += project.version
    }

    inputs.property 'repoContentRootUrl', repoContentRootUrl

    doLast {
        new File(destinationDir, 'plugin.xml').with {
            setText(getText('UTF-8').replace('@@repoContentRootUrl@@', repoContentRootUrl), 'UTF-8')
        }
    }
}
